package com.warehouse.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SupplierContactAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupplierContactAllPropertiesEquals(SupplierContact expected, SupplierContact actual) {
        assertSupplierContactAutoGeneratedPropertiesEquals(expected, actual);
        assertSupplierContactAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupplierContactAllUpdatablePropertiesEquals(SupplierContact expected, SupplierContact actual) {
        assertSupplierContactUpdatableFieldsEquals(expected, actual);
        assertSupplierContactUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupplierContactAutoGeneratedPropertiesEquals(SupplierContact expected, SupplierContact actual) {
        assertThat(expected)
            .as("Verify SupplierContact auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupplierContactUpdatableFieldsEquals(SupplierContact expected, SupplierContact actual) {
        assertThat(expected)
            .as("Verify SupplierContact relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()))
            .satisfies(e -> assertThat(e.getPhone()).as("check phone").isEqualTo(actual.getPhone()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupplierContactUpdatableRelationshipsEquals(SupplierContact expected, SupplierContact actual) {
        assertThat(expected)
            .as("Verify SupplierContact relationships")
            .satisfies(e -> assertThat(e.getSupplier()).as("check supplier").isEqualTo(actual.getSupplier()));
    }
}
