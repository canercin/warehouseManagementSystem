package com.warehouse.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SupplierAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupplierAllPropertiesEquals(Supplier expected, Supplier actual) {
        assertSupplierAutoGeneratedPropertiesEquals(expected, actual);
        assertSupplierAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupplierAllUpdatablePropertiesEquals(Supplier expected, Supplier actual) {
        assertSupplierUpdatableFieldsEquals(expected, actual);
        assertSupplierUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupplierAutoGeneratedPropertiesEquals(Supplier expected, Supplier actual) {
        assertThat(expected)
            .as("Verify Supplier auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupplierUpdatableFieldsEquals(Supplier expected, Supplier actual) {
        assertThat(expected)
            .as("Verify Supplier relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getContactInfo()).as("check contactInfo").isEqualTo(actual.getContactInfo()))
            .satisfies(e -> assertThat(e.getAddress()).as("check address").isEqualTo(actual.getAddress()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupplierUpdatableRelationshipsEquals(Supplier expected, Supplier actual) {
        assertThat(expected)
            .as("Verify Supplier relationships")
            .satisfies(e -> assertThat(e.getProducts()).as("check products").isEqualTo(actual.getProducts()));
    }
}
